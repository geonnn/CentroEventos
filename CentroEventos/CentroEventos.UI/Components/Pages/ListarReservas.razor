@page "/listas/reservas"
@rendermode InteractiveServer
@inject ListarReservaUseCase ListarReservaUseCase
@inject Sesion sesion
@inject BajaReservaUseCase ReservaBajaUseCase
@inject AltaReservaUseCase ReservaAltaUseCase
@inject ModificarReservaUseCase ModificarReservaUseCase

<AuthGuard>

    <PageTitle>Listado de reservas</PageTitle>

    <h3>Reservas</h3>

    @if (sesion.Usuario.PoseeElPermiso(Permiso.ReservaAlta)){
        <div class="flex " >
            <button class="btn btn-success" @onclick="NuevaReserva">Agregar reserva</button>
            <ModalReserva @ref=alta OnConfirmado="() => AgregarReserva()" />
        </div>
    }
    <table>
        <tr>
            <th>ID</th>
            <th>Persona ID</th>
            @* <th>Nombre Persona</th> *@
            <th>Evento ID</th>
            <th>Estado</th>
            @if (sesion.Usuario.PoseeElPermiso(Permiso.ReservaModificacion) || sesion.Usuario.PoseeElPermiso(Permiso.ReservaBaja)){
                <th>Acción</th>
            }   
        </tr>
        @foreach (var reserva in _lista)
        {
        <tr>
            <td>@reserva.Id</td>
            <td>@reserva.PersonaId</td>
            <td>@reserva.EventoDeportivoId</td>
            <td>@reserva.Estado</td>
            @if (sesion.Usuario.PoseeElPermiso(Permiso.ReservaModificacion) || sesion.Usuario.PoseeElPermiso(Permiso.ReservaBaja)){
                <td class="flex flex-row-center">
                @if (sesion.Usuario.PoseeElPermiso(Permiso.ReservaModificacion)){
                    <button class="btn btn-primary modificacion-reserva" @onclick="()=>ConfirmarModificacion(reserva)">Modificar</button>
                }
                @if (sesion.Usuario.PoseeElPermiso(Permiso.ReservaBaja)){
                        <button class="btn btn-danger baja-reserva" @onclick="()=>ConfirmarEliminacion(reserva)">Eliminar</button>
                }
                </td>
            }
        </tr>
        }
    </table>
    
    <ModalReserva @ref=modificar OnConfirmado="() => ModificarReserva()" />
    <DialogoConfirmacion @ref=dialogo Mensaje="¿Está seguro que desea eliminar esta reserva?" OnConfirmado="() => EliminarReserva()" />
    <ModalError @ref=error/>

</AuthGuard>


@code {
    List<Reserva> _lista = new List<Reserva>();
    protected override void OnInitialized()
    {
        _lista = ListarReservaUseCase.Ejecutar();
    }
    ModalReserva alta = new();
    ModalReserva modificar = new();
    DialogoConfirmacion dialogo = new();
    ModalError error = new();
    Reserva? _ReservaAOperar = null;

    private void NuevaReserva() {
        alta.Mostrar();
    }
    private void AgregarReserva()
    {   
        try
        {
            ReservaAltaUseCase.Ejecutar(alta._reserva!, sesion.Usuario.Permisos);
            _lista = ListarReservaUseCase.Ejecutar();
            StateHasChanged();
        }
        catch(Exception e)
        {
            error.Mostrar(e.Message);
        }
    }
    private void ConfirmarModificacion(Reserva r)
    {
        _ReservaAOperar = r;
        modificar.Mostrar(_ReservaAOperar);
    }
    private void ModificarReserva()
    {
        try
        {
            ModificarReservaUseCase.Ejecutar(_ReservaAOperar!, sesion.Usuario.Permisos);
            _lista = ListarReservaUseCase.Ejecutar();
            StateHasChanged();
        }
        catch(Exception e)
        {
            error.Mostrar(e.Message);
        }
    }
    private void ConfirmarEliminacion(Reserva r)
    {
        _ReservaAOperar = r;
        dialogo.Mostrar();
    }
    private void EliminarReserva()
    {
        try
        {
            ReservaBajaUseCase.Ejecutar(_ReservaAOperar!.Id, sesion.Usuario.Permisos);
            _lista = ListarReservaUseCase.Ejecutar();
            StateHasChanged();
        }
        catch(Exception e)
        {
            error.Mostrar(e.Message);
        }
    }
    
}
