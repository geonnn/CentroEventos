@page "/listas/eventos-deportivos"

@inject ListarEventosConCupoDisponibleUseCase ListarEventosConCupoDisponibleUseCase
@inject ListarEventoDeportivoUseCase ListarEventoDeportivoUseCase
@inject Sesion sesion
@inject BajaEventoDeportivoUseCase BajaEventoDeportivoUseCase

<h3>Eventos Deportivos</h3>

@if (sesion.EstaIniciado && sesion.Usuario.PoseeElPermiso(Permiso.EventoAlta)){
    <button @onclick="NuevoEventoDeportivo">Agregar Evento Deportivo</button>
    <ModalAlta @ref=alta/>
}
@if (sesion.EstaIniciado){
    <table>
        <tr>
            <th>ID</th>
            <th>ID Responsable</th>
            <th>Nombre</th>
            <th>Cupo M치ximo</th>
            <th>Duraci칩n</th>
        </tr>
        @foreach (var eventoDeportivo in _lista)
        {
        <tr>
            <td>@eventoDeportivo.Id</td>
            <td>@eventoDeportivo.ResponsableId</td>
            <td>@eventoDeportivo.Nombre</td>
            <td>@eventoDeportivo.CupoMaximo</td>
            <td>@eventoDeportivo.DuracionHoras</td>
            <td>

            @if (eventoDeportivo.FechaHoraInicio.AddHours(eventoDeportivo.DuracionHoras) < DateTime.Now) {
                <ModalListaAsistentes @ref=@modales[eventoDeportivo.Id] ID=@eventoDeportivo.Id nombre=@eventoDeportivo.Nombre />
                <button @onclick="() => MostrarModal(eventoDeportivo.Id)">Listar Personas</button>
                }
            </td>
            @if (sesion.Usuario.PoseeElPermiso(Permiso.EventoModificacion)){
            <td>
                <button class="btn btn-danger modificacion-evento-deportivo" @onclick="()=>ConfirmarModificacion(eventoDeportivo)">Modificar</button>
                
            </td>
            }
            @if (sesion.Usuario.PoseeElPermiso(Permiso.EventoBaja)){
            <td>
                <button class="btn btn-danger baja-evento-deportivo" @onclick="()=>ConfirmarEliminacion(eventoDeportivo)">Eliminar</button>
                <DialogoConfirmacion @ref=dialogo Mensaje="Esta seguro que desea elimar este Evento Deportivo?" />
            </td>
            }
        </tr>
        }
    </table>
}
<h3>Eventos Deportivos Con Cupo</h3>
<table>
    <tr>
        <th>ID</th>
        <th>ID Responsable</th>
        <th>Nombre</th>
        <th>Cupo M치ximo</th>
        <th>Duraci칩n</th>
    </tr>
    @foreach (var eventoDeportivo in _listaCupos)
    {
    <tr>
        <td>@eventoDeportivo.Id</td>
        <td>@eventoDeportivo.ResponsableId</td>
        <td>@eventoDeportivo.Nombre</td>
        <td>@eventoDeportivo.CupoMaximo</td>
        <td>@eventoDeportivo.DuracionHoras</td>
    </tr>
    }
 </table>

@code {
    List<EventoDeportivo> _lista = new List<EventoDeportivo>();
    List<EventoDeportivo> _listaCupos = new List<EventoDeportivo>();
    List<Persona> _listaPersonas = new List<Persona>();

    Dictionary<int, ModalListaAsistentes> modales = new();


    void MostrarModal(int id)
    {
        if (modales.TryGetValue(id, out var modal))
        {
            modal.Mostrar();
        }
    }
    
    protected override void OnInitialized()
    {
        _lista = ListarEventoDeportivoUseCase.Ejecutar();
        _listaCupos = ListarEventosConCupoDisponibleUseCase.Ejecutar();
        
    }
    ModalListaAsistentes modal = null!;
    void irALista() {
        modal.Mostrar();
    }
    ModalAlta alta = new();
    private void NuevoEventoDeportivo() {
        alta.Mostrar();
    }
    DialogoConfirmacion dialogo = null!;
    private void ConfirmarEliminacion(EventoDeportivo e)
    {
        dialogo.Mostrar();
    }
    private void ConfirmarModificacion(EventoDeportivo e)
    {
        
    }
}