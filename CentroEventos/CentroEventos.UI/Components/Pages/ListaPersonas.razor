@page "/listas/personas"
@rendermode InteractiveServer
@inject Sesion sesion
@inject ListarPersonaUseCase listarPersonaUseCase
@inject AltaPersonaUseCase altaPersonaUseCase
@inject BajaPersonaUseCase bajaPersonaUseCase
@inject ModificarPersonaUseCase modificarPersonaUseCase
@inject NavigationManager Nav

<AuthGuard>

    <PageTitle>Listado de personas</PageTitle>
    
    <h3>Personas</h3>

    @if (sesion.Usuario.PoseeElPermiso(Permiso.PersonaAlta)){
        <div class="flex ">
            <button class="btn btn-success" @onclick="Modal">Agregar persona</button>
        </div>
        <ModalPersona @ref=alta OnConfirmado="() => AgregarPersona()" />
    }
    <table>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>DNI</th>
            <th>Email</th>
            <th>Teléfono</th>
            @if (sesion.Usuario.PoseeElPermiso(Permiso.UsuarioModificacion) || sesion.Usuario.PoseeElPermiso(Permiso.UsuarioBaja)){
                <th>Acción</th>
            }   
        </tr>
        @foreach (var persona in _lista)
        {
        <tr>
            <td>@persona.Id</td>
            <td>@persona.Nombre</td>
            <td>@persona.Apellido</td>
            <td>@persona.Dni</td>
            <td>@persona.Email</td>
            <td>@persona.Telefono</td>
            <td class="flex flex-row-center">
            @if (sesion.Usuario.PoseeElPermiso(Permiso.PersonaModificacion)){
                    <button class="btn btn-primary modificacion-persona" @onclick="()=>Modal(persona)">Modificar</button>
            }
                <button class="btn btn-danger baja-persona" @onclick="() => Confirmacion(persona)">Eliminar</button>
            </td>
        
        </tr>
        }
    </table>

    <ModalPersona @ref=modificar OnConfirmado="() => ModificarPersona()" />
    <DialogoConfirmacion @ref=dialogo Mensaje="¿Está seguro que desea eliminar esta persona?" OnConfirmado="() => EliminarPersona()" />
    <ModalError @ref=error/>
    
</AuthGuard>
@code {

    List<Persona> _lista = new List<Persona>();
    DialogoConfirmacion dialogo = new();
    
    ModalPersona alta = new();
    ModalPersona modificar = new();
    Persona? _PersonaAOperar = null;
    ModalError error = new();

    protected override void OnInitialized()
    {
        _lista = listarPersonaUseCase.Ejecutar();
    }

    private void ActualizarLista(){
        _lista = listarPersonaUseCase.Ejecutar();
        StateHasChanged();
    }

    // Alta
    private void Modal() {
        alta.Mostrar();
    }

    private void AgregarPersona()
    {
        try
        {
            altaPersonaUseCase.Ejecutar(alta._persona!, sesion.Usuario.Permisos);
        }
        catch (Exception e)
        {
            error.Mostrar(e.Message);
        }
        finally
        {
            ActualizarLista();
        }
    }

    // Modificación
    private void Modal(Persona p)
    {
        _PersonaAOperar = p;
        modificar.Mostrar(_PersonaAOperar);
    }
    
    private void ModificarPersona()
    {
        try
        {
            modificarPersonaUseCase.Ejecutar(modificar._persona!, sesion.Usuario.Permisos);
        }
        catch (Exception e)
        {
            error.Mostrar(e.Message);
        }
        finally
        {
            ActualizarLista();
        }
    }

    // Baja
    private void Confirmacion(Persona p)
    {
        _PersonaAOperar = p;
        dialogo.Mostrar();
    }

    private void EliminarPersona()
    {
        try
        {
            bajaPersonaUseCase.Ejecutar(_PersonaAOperar!.Id, sesion.Usuario.Permisos);
            ActualizarLista();
        }
        catch(Exception e)
        {
            error.Mostrar(e.Message);
        }
    }
    
}
